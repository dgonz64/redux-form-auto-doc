"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BSInputWrapper = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const renderLabel = props => {
  const labelClasses = (0, _classnames.default)('control-label', {
    ['col-sm-4']: props.horizontal
  });
  return _react.default.createElement("label", {
    className: labelClasses,
    "data-required": props.required
  }, props.label);
};

const renderError = message => {
  if (message) {
    return _react.default.createElement("span", {
      className: "help-block"
    }, message);
  } else return null;
};

const renderElement = (props, wrapperClasses) => _react.default.createElement("div", {
  className: wrapperClasses
}, props.children, renderError(props.errorMessage || props.warningMessage));

const BSInputWrapper = props => {
  const label = props.label ? renderLabel(props) : null;
  const wrapperClasses = props.wrapperClassName || (0, _classnames.default)({
    'col-sm-7': props.horizontal && !props.inline,
    'col-sm-10': props.inline
  });
  const groupClasses = (0, _classnames.default)('form-group', {
    'has-error': props.errorMessage,
    'has-warning': props.warningMessage
  });
  const element = renderElement(props, wrapperClasses);

  if (props.elementOnly) {
    return _react.default.createElement("div", {
      className: groupClasses
    }, element);
  } else {
    return _react.default.createElement("div", {
      className: groupClasses
    }, label, element);
  }
};

exports.BSInputWrapper = BSInputWrapper;
BSInputWrapper.propTypes = {
  label: _propTypes.default.string,
  horizontal: _propTypes.default.bool,
  required: _propTypes.default.bool,
  elementOnly: _propTypes.default.bool,
  inline: _propTypes.default.bool,
  children: _propTypes.default.node.isRequired,
  errorMessage: _propTypes.default.any,
  warningMessages: _propTypes.default.any
};